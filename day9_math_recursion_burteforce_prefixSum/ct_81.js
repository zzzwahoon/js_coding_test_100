// 등수 매기기

// ### **문제 설명**
// 영어 점수와 수학 점수의 평균 점수를 기준으로 학생들의 등수를 매기려고 합니다. 영어 점수와 수학 점수를 담은 2차원 정수 배열 `scores`가 주어질 때, 영어 점수와 수학 점수의 평균을 기준으로 매긴 등수를 담은 배열을 return하도록 solution 함수를 완성해주세요.

// ### 제한사항
// - 0 ≤ `scores`[0], `scores`[1] ≤ 100
// - 1 ≤ `scores`의 길이 ≤ 10
// - `scores`의 원소 길이는 2입니다.
// - `scores`는 중복된 원소를 갖지 않습니다.

// ### 입출력 예
// | scores | result |
// | --- | --- |
// | [[80, 70], [90, 50], [40, 70], [50, 80]] | [1, 2, 4, 3] |
// | [[80, 70], [70, 80], [30, 50], [90, 100], [100, 90], [100, 100], [10, 30]] | [4, 4, 6, 2, 2, 1, 7] |

// ### 입출력 예 설명
// 입출력 예 #1
// - 평균은 각각 75, 70, 55, 65 이므로 등수를 매겨 [1, 2, 4, 3]을 return합니다.
// 입출력 예 #2
// - 평균은 각각 75, 75, 40, 95, 95, 100, 20 이므로 [4, 4, 6, 2, 2, 1, 7] 을 return합니다.
// - 공동 2등이 두 명, 공동 4등이 2명 이므로 3등과 5등은 없습니다.

const solution = scores => {
  // 1. 평균 구하기
  const averages = [];

  for (const [eng, math] of scores) {
    averages.push((eng + math) / 2);
  }
  
  // const sorted = [...averages].sort((a, b) => b - a);
  const sorted = averages.toSorted((a, b) => b - a);

  // 2. 등수를 구하기 위해 평균을 내림차순으로 정렬
  const rank = [];
  for (const average of averages) {
    rank.push(sorted.indexOf(average) + 1);
  }
  return rank;

  // 3. 1과 2의 결과를 비교하여 등수를 구함
};

console.log(solution([[80, 70], [90, 50], [40, 70], [50, 80]]));
// [1, 2, 4, 3]
console.log(solution([[80, 70], [70, 80], [30, 50], [90, 100], [100, 90], [100, 100], [10, 30]]));
// [4, 4, 6, 2, 2, 1, 7]